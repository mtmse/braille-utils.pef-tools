// For bnd
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.1.0'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'checkstyle'
}

apply plugin: 'biz.aQute.bnd.builder'

// Used for dependencies resolution and javadoc links.
// Never use snapshots here.
// To test with snapshots, modify the version directly in the dependencies section,
// but don't forget to change it back when you're done.
ext.versions = [
    'dotifyApi'		: '5.0.0'
]

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc {
    options.encoding = 'UTF-8'
    options.source = 8
    options.links('https://docs.oracle.com/javase/8/docs/api/');
    options.links("https://brailleapps.github.io/dotify.api/$versions.dotifyApi/javadoc/")
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

group = "org.daisy.braille"

sourceSets {
    main {	java { srcDir 'src' }	resources { srcDir 'src' } }
    test {	java { srcDir 'test' }	resources { srcDir 'test' } }
}

repositories {
    mavenCentral()
    //mavenLocal()
    maven { url "https://oss.sonatype.org/content/groups/staging" }
}

dependencies {
    compileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'
    compile 'org.daisy.dotify:dotify.api:5.0.0'
    testCompileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.daisy.dotify:dotify.common:4.4.1'
    runtimeOnly (group: 'org.daisy.libs', name: 'saxon-he', version: '9.5.1.5') {
        exclude module: 'Saxon-HE'
    }

}

jar {
    manifest {
        attributes(
            '-sources': 'true',
            'Export-Package': 'org.daisy.braille.utils.pef',
            'Automatic-Module-Name': "$moduleName",
            'Bundle-Name': "$bundleName",
            'Bundle-SymbolicName': "$bundleName",
            'Built-By': System.getProperty("user.name"),
            'Built-On': new Date().format('yyyy-MM-dd'),
            'Implementation-Title': "$releaseName",
            'Repository-Revision': "$repoRevision",
            'Repository-URL': "$repositoryURL",
            'Include-Resource': 'LICENSE, NOTICE'
        )
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    required { isReleaseVersion }
    sign publishing.publications
}

publishing {
    //Only upload if a git hash is supplied. On Travis only upload snapshots.
    //enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            /*
            if (isReleaseVersion) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }*/
            pom {
                name = 'braille-utils.pef-tools'
                packaging = 'jar'
                description = 'PEF Tools'
                url = "$repositoryURL"
                scm {
                    connection = "$repositorySCM"
                    developerConnection = "$repositorySCM"
                    url = "$repositoryURL"
                }
                licenses {
                    license {
                        name = 'LGPL'
                        url = 'http://www.gnu.org/licenses/lgpl.html'
                    }
                }
                developers {
                    developer {
                        id = 'joel'
                        name = 'Joel HÃ¥kansson'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def stagingRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : stagingRepoUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

checkstyle {
    toolVersion '7.8.1'
    configFile file("checkstyle.xml")
}
checkstyleMain {
    source = 'src'
}
checkstyleTest {
    source = ['test']
}

tasks.withType(Checkstyle) {
    exclude '**/resource-files/**'
}
